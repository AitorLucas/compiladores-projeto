# Valid
(5 + 3)
(x MEM)
(y RES)
(1 + 2 * 3)
(a == b)
(for i 0 10 (x + y))
(5 + (3 * 2))
(x - y)
(3 MEM 5)
(if (x > 0) then (y = 1))
(10 / (2 + 3))
(x * (y - z))
(x + 2 == y)
(if (x != y) then (z = 0))
(for i 0 5 (x + y))
(10 * 3)
(x MEM 3)
(5 + 10)
(10 - 3)
(x == y * 3)
(for i 1 5 (a + b))
(if (x == 5) then (y = 10) else (z = 15))
(x - y + 2)
(if (x > 3) then (y = 5) else (z = 7))
(for i 0 100 (x MEM))
(x * y + z)
(x MEM 10)
(3 > 2)
(if (a == b) then (c = 1))
(x + (y - z) * 3)
(x + 2 * 3)
(if (x == 1) then (y = x + 2))
(for i 0 10 (x MEM))
(x * 5)
(3 + 4)
(2 ^ 3)
(if (x > y) then (z = 5) else (w = 10))
(3 * 2)
(if (x == y) then (z = 0))
(x MEM)
(x == y)
(2 + (3 - 4))
(x / (y + 1))
(10 MEM 2)
(for i 1 10 (x + y))
(x MEM 3)
(5 * (2 + 1))
(1 == 1)
(2 == 2)
(if (x < 5) then (y = 2))
(x MEM 4)
(if (x > 10) then (y = x + 5) else (z = y - 3))
(for i 0 10 (if (i == 5) then (result = i * 2)))
(3 + (x * (y - z)) - 5)
(x + y == (a * b + c))
(if ((x + y) > 10) then (z = x / y) else (w = x * y))
(3 * (x + y) - (z * 2))
(for i 0 10 (if (i > 5) then (x = i + 2) else (y = i - 1)))
(x MEM (y + (z * 3)))
(10 + (2 * (x - y)) + (z / 5))
(if (x < 0) then (result = x * y + 10) else (result = y - x))
(for i 1 10 (if (i % 2 == 0) then (x = i * 3) else (y = i / 2)))
((x + y) * (z - 4) == (a / b))
(for i 1 10 (if (i % 2 == 0) then (x = x + 1) else (y = y - 2)))
((x == y) and (a < b) or (c != d))
(if ((x > 5) and (y < 10)) then (z = x * y) else (w = x + y))
(x MEM ((a + b) * c) == (d - e))
(if ((a * b) > c) then (z = a + b) else (x = c - d))
(for i 0 20 (if (i < 5) then (x = i * 3) else (y = i + 2)))
(x MEM ((y - 3) + (z * 2)) == 5)
(3 + (x * (y + z) - 2) + (w / 2))
(if ((x + y) == (z * 2)) then (a = 5) else (b = 10))
(for i 0 10 (if (i == 2) then (x = i * 5) else (y = i + 1)))
((x * y) == (a + (b * 2)))
(if (x == 10) then (result = x * 2) else (result = x / 2))
(for i 0 10 (if (i == 5) then (x = x + 3) else (y = y - 2)))
((x + y) - (z * 3) == (a + (b * c)))
(if (x == 1) then (y = x + 3) else (z = y * 2))


# Invalid
(1 +)
(2 + 3 * )
(x + + y)
(5 MEM )
(x + (y - z
(for x 1 10)
(3 + 2 MEM)
(10 * / 2)
(x == 2 3)
(if x == 1 then (y = 3))
(5 * (2 +)
(x + (y + z))
(if (x + y) then (z = 5))
(x == 2 &&)
(3 + 4 ==)
(for i 1 10)
(x + y MEM)
(x MEM 2 + 3)
(5 / 2 + )
(if (x == 3) then (y = 4) else)
(for x 1 10 (x * y +))
(3 * + 4)
(3 ==)
(x MEM y)
(x == y and z ==)
(10 ==)
(if (a + b) then (x = 1))
(1 * 2 + 3)
(3 MEM + 2)
(x * + 3)
(if x then (z = 5))
(x + 2 MEM)
(3 + 2 (x + 1))
(x == + y)
(for x 1 10 (y))
(3 >)
(10 == 5)
(if (x == 1) (y = 3))
(3 == y MEM)
(5 - (x +))
(10 + 2 MEM)
(if (x == 5) then)
(for i 1 10 (x MEM))
(1 + 3 ==)
(x MEM (2 + 3))
(x == y == z)
(if ((x + y) * z then (x = 5) else (y = 10))
(3 + (x + y == (a * b)))
(for i 0 10 (if (i == 5) then (x + y) else (z = x * 2)))
(if (x + y > 10) then (z = x / y else (w = x * y)))
((x + y) * (z - 3) == (a / b and c))
(for i 0 10 (if (i == 5) then (x = i + 3) else))
(10 * (x + y == 3) - 2)
(if (x == 1) then (result = 5) else (result = x + (z + y))
(for i 0 10 (x = i + 3 else (y = i - 1)))
((x + y) * (z - 4)) == (a / b
(if (x == 5) then (result = x * 2) else (result = 2 + 3)
(for i 0 10 (if (i == 3 then (x = i + 2) else (y = i - 1)))
(if ((x + y) > 10) then (z = 5) else (w = x *))
((x + y) * (z - 3) == (a + (b + c))
(for i 0 10 (if (i == 4) then (x = 2 + 3 else (y = 5))))
(x == (y MEM z))
(3 * (x + (y + 2) - (z + 1)) 
(x + (y * 3 == z)
(if (x + y) then (result = 5) else (result = 2 +))
(for i 0 10 (if (i > 3) then (y = 5 else)))
(x MEM (y + (z * (3 + x)))
(if (x + y == z) then (a = b) else (result = 5))
(3 + (x == 4))
