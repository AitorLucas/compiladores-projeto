FIRST Sets
-------------

╔═══════════════╤═══════════════════════════╗
║  Não-terminal	│           FIRST           ║
╟───────────────┼───────────────────────────╢
║ <program>	    │ (                         ║
║ <expression>	│ (                         ║
║ <expr_body>	│ IF, FOR, MEM, NUMBER, (   ║
║ <rpn_expr>	│ NUMBER, (                 ║
║ <mem_expr>	│ MEM, NUMBER, (            ║    
║ <term>	    │ NUMBER, (                 ║
║ <arith_op>	│ +, -, *, /, %, ^, `       ║
║ <if_expr>	    │ IF                        ║
║ <cond_expr>	│ (                         ║
║ <comp_op>	    │ ==, !=, <, >, <=, >=      ║
║ <for_expr>	│ FOR                       ║
╚═══════════════╧═══════════════════════════╝


FOLLOW Sets
-------------

╔═══════════════╤═══════════════════════════════════════╗
║  Não-terminal	│                  FOLLOW               ║
╟───────────────┼───────────────────────────────────────╢
║ <program>	    │ EOF                                   ║
║ <expression>	│ NEWLINE, ), ELSE                      ║
║ <expr_body>	│ )                                     ║
║ <rpn_expr>	│ )                                     ║
║ <mem_expr>	│ )                                     ║
║ <term>	    │ term, arith_op, MEM, RES, ), comp_op  ║
║ <arith_op>	│ )                                     ║
║ <if_expr>	    │ )                                     ║ 
║ <cond_expr>	│ THEN                                  ║
║ <comp_op>	    │ )                                     ║
║ <for_expr>	│ )                                     ║
╚═══════════════╧═══════════════════════════════════════╝